name: Deploy Server to Deno Deploy

on:
  push:
    branches: [main]
    paths:
      - "server/**"
      - ".github/workflows/server-deploy.yml"
  pull_request:
    branches: [main]
    paths:
      - "server/**"
  workflow_dispatch:

jobs:
  test:
    name: Test Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.44.x

      - name: Install Doppler CLI
        run: |
          (curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh || wget -t 3 -qO- https://cli.doppler.com/install.sh) | sudo sh
          doppler --version

      - name: Configure Doppler
        run: |
          doppler configure set token ${{ secrets.DOPPLER_TOKEN }} --scope .
        working-directory: ./server

      - name: Run Linting
        run: |
          deno lint
        working-directory: ./server

      # Temporarily disable tests due to unit tests not being implemented yet
      # - name: Run Tests
      #   run: |
      #     doppler run -- deno test --allow-net --allow-env
      #   working-directory: ./server

  deploy:
    name: Deploy Server
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    # Using default environment

    # Add permissions needed for OIDC authentication with Deno Deploy
    permissions:
      id-token: write # Needed for OIDC authentication with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.44.x

      - name: Install Doppler CLI
        run: |
          (curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh || wget -t 3 -qO- https://cli.doppler.com/install.sh) | sudo sh
          doppler --version

      - name: Configure Doppler
        run: |
          doppler configure set token ${{ secrets.DOPPLER_TOKEN }} --scope .
        working-directory: ./server

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: ${{ secrets.DENO_PROJECT }}
          entrypoint: main.ts
          root: server
          import-map: server/deno.json

      - name: Verify Deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 15
          curl -f https://${{ secrets.DENO_PROJECT }}.deno.dev/health || exit 1
